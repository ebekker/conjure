project:
  namespace: '{Database.Name}'
  namespace: 'AdvWorks'
  directory: '{Options.ProfileParentPath}/_efx/{Options.ProfileName}'
database:
  provider: SqlServer
  connectionString: Data Source=(local)\SQLEXPRESS;Initial Catalog=AdventureWorks2017;Integrated Security=True
  exclude:
    ## Don't want to deal with HierarchyId column type for now
    - exact: 'Production.Document'
    - exact: 'Production.ProductDocument'
data:
  context:
    name: '{Database.Name}Context'
    #baseClass: DbContext
    #baseClass: TrackerContextBase
    namespace: '{Project.Namespace}.Data'
    directory: '{Project.Directory}\Data'
    document: true
  entity:
    namespace: '{Project.Namespace}.Data.Entities'
    directory: '{Project.Directory}\Data\Entities'
    document: true
  mapping:
    namespace: '{Project.Namespace}.Data.Mapping'
    directory: '{Project.Directory}\Data\Mapping'
    document: true
  query:
    generate: true
    indexPrefix: By
    uniquePrefix: GetBy
    namespace: '{Project.Namespace}.Data.Queries'
    directory: '{Project.Directory}\Data\Queries'
    document: true
model:
  shared:
    namespace: '{Project.Namespace}.Domain.Models'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Models'
    exclude:
      properties:
        - '\.Id$'
        - '\.Created$'
        - '\.CreatedBy$'
        - '\.Updated$'
        - '\.UpdatedBy$'
        - '\.RowVersion$'
        - 'User\.PasswordHash$'
        - 'User\.ResetHash$'
        - 'User\.InviteHash$'
  read:
    generate: true
    name: '{Entity.Name}ReadModel'
    baseClass: EntityReadModel
    document: true
  create:
    generate: true
    name: '{Entity.Name}CreateModel'
    baseClass: EntityCreateModel
    document: true
    exclude:
      entities:
        - 'UserLogin'
  update:
    generate: true
    name: '{Entity.Name}UpdateModel'
    baseClass: EntityUpdateModel
    document: true
    exclude:
      entities:
        - 'UserLogin'
  mapper:
    generate: true
    name: '{Entity.Name}Profile'
    baseClass: Profile
    namespace: '{Project.Namespace}.Domain.Mapping'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Mapping'
    document: true
  validator:
    generate: true
    name: '{Model.Name}Validator'
    baseClass: 'AbstractValidator<{Model.Name}>'
    namespace: '{Project.Namespace}.Domain.Validation'
    directory: '{Project.Directory}\Domain\{Entity.Name}\Validation'
    document: true
